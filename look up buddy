local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer
local antiLockEnabled = false -- Default state for anti-lock is OFF
local toggleButton

-- Function to force the camera to look up when another player locks onto the local player
local function forceCameraUp(player)
    if player == localPlayer then return end
    if player.Character then
        local character = player.Character
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        local upperTorso = character:FindFirstChild("UpperTorso")
        
        if humanoidRootPart and upperTorso then
            local distance = (humanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < 200 then
                local camera = workspace.CurrentCamera
                
                -- If the camera is facing the local player, redirect it up
                if camera then
                    local randomAdjustment = Vector3.new(
                        math.random(-10, 10),
                        100, -- Force the camera to look up
                        math.random(-10, 10)
                    )
                    local currentCFrame = camera.CFrame
                    camera.CFrame = CFrame.new(currentCFrame.Position, currentCFrame.Position + randomAdjustment)
                end
            end
        end
    end
end

-- Function to run anti-lock logic
local function antiLockLogic()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player ~= localPlayer then
            forceCameraUp(player)  -- Apply anti-lock to the player targeting the local player
        end
    end
end

-- Create a toggle button for enabling/disabling anti-lock
local function createToggleButton()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = localPlayer:WaitForChild("PlayerGui")

    toggleButton = Instance.new("TextButton")
    toggleButton.Parent = ScreenGui
    toggleButton.Text = "Anti-Lock\nOff"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    toggleButton.TextScaled = true
    toggleButton.Font = Enum.Font.Gotham
    toggleButton.TextWrapped = true

    -- Adjust button size and position based on platform
    if UserInputService.TouchEnabled then
        toggleButton.Size = UDim2.new(0, 30, 0, 30)
        toggleButton.Position = UDim2.new(0, 10, 0, 10)
    else
        toggleButton.Size = UDim2.new(0, 50, 0, 50)
        toggleButton.Position = UDim2.new(0, 10, 0, 10)
    end

    -- Toggle anti-lock functionality
    toggleButton.MouseButton1Click:Connect(function()
        antiLockEnabled = not antiLockEnabled
        toggleButton.Text = antiLockEnabled and "Anti-Lock\nOn" or "Anti-Lock\nOff"
    end)
end

-- Ensure toggle button persists across respawns
local function ensureButtonOnRespawn()
    localPlayer.CharacterAdded:Connect(function()
        -- Recreate the toggle button after respawn
        createToggleButton()
    end)
end

-- Run anti-lock logic every frame
RunService.Heartbeat:Connect(function()
    if antiLockEnabled then
        antiLockLogic()  -- Apply anti-lock to all players targeting the local player
    end
end)

-- Initialize the script
createToggleButton()
ensureButtonOnRespawn()
