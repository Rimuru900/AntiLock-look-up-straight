local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer
local antiLockEnabled = false -- Default state for anti-lock is OFF
local toggleButton

-- Function to force an attacker's camera upwards
local function forceCameraUp(attacker)
    if attacker and attacker ~= localPlayer and attacker.Character then
        local attackerCamera = workspace:FindFirstChild(attacker.Name .. "'s Camera") or workspace.CurrentCamera
        if attackerCamera then
            -- Force attacker's camera to look straight up
            local randomAdjustment = Vector3.new(
                math.random(-5, 5),
                100,
                math.random(-5, 5)
            )
            local currentCFrame = attackerCamera.CFrame
            local targetCFrame = CFrame.new(currentCFrame.Position, currentCFrame.Position + randomAdjustment)

            attackerCamera.CFrame = targetCFrame -- Force immediate camera change
        end
    end
end

-- Function to detect locks and apply anti-lock measures
local function antiLockAndSilentAim()
    local character = localPlayer.Character
    if not character then return end

    local upperTorso = character:FindFirstChild("UpperTorso")
    if not upperTorso then return end

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local targetTorso = player.Character:FindFirstChild("UpperTorso")
            local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
            local humanoid = player.Character:FindFirstChild("Humanoid")

            if targetTorso and humanoid and humanoid.Health > 0 then
                local distance = (upperTorso.Position - targetTorso.Position).Magnitude

                if distance < 200 then
                    forceCameraUp(player) -- Disrupt the attacker's lock-on
                end
            end
        end
    end
end

-- Create a toggle button for anti-lock functionality
local function createToggleButton()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = localPlayer:WaitForChild("PlayerGui")

    toggleButton = Instance.new("TextButton")
    toggleButton.Parent = ScreenGui
    toggleButton.Text = "Anti-Lock\nOff"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    toggleButton.TextScaled = true
    toggleButton.Font = Enum.Font.Gotham
    toggleButton.TextWrapped = true

    -- Adjust button size and position for platform
    if UserInputService.TouchEnabled then
        toggleButton.Size = UDim2.new(0, 30, 0, 30)
        toggleButton.Position = UDim2.new(0, 10, 0, 10)
    else
        toggleButton.Size = UDim2.new(0, 50, 0, 50)
        toggleButton.Position = UDim2.new(0, 10, 0, 10)
    end

    -- Toggle anti-lock functionality
    toggleButton.MouseButton1Click:Connect(function()
        antiLockEnabled = not antiLockEnabled
        toggleButton.Text = antiLockEnabled and "Anti-Lock\nOn" or "Anti-Lock\nOff"
    end)
end

-- Keep the toggle button visible after respawn
localPlayer.CharacterAdded:Connect(function()
    toggleButton.Parent = localPlayer:WaitForChild("PlayerGui")
end)

-- Run anti-lock logic when enabled
RunService.Heartbeat:Connect(function()
    if antiLockEnabled then
        antiLockAndSilentAim()
    end
end)

-- Initialize the script
createToggleButton()
